# Requirements.

Notifications for the user are created if any user related activity
happens in the app. Message (email) is sent to user when new
notification is created.

Admin is notified when
- new user is registered, data: link to the user profile,
- new post is published, data: link to the post,
- new reply is posted, data: link to the reply.

User is notified when:
- new reply is posted to his post,
[moderation]
- admin has updated or deleted user's post,
- admin has updated or deleted user's reply,
[administration]
- admin has updated or deleted the user.

Notification flag (bell) is displayed next to user name on
main menu if there are unread notifications for the user

Unread notifcations are displaied on user profile page,
can be marked as read.

# Implementation

Create notifications table
$ php artisan notifications:table
$ php artisan migrate

$ php artisan make:notification UserRegistered --markdown=emails.notification.user-registered
$ php artisan make:notification UserConfirmed --markdown=emails.notification.user-confirmed
$ php artisan make:notification PostCreatedAdminNotification --markdown=emails.notification.post-created
$ php artisan make:notification ReplyCreatedAdminNotification --markdown=emails.notification.reply-created
$ php artisan make:notification ReplyCreatedUserNotification --markdown=emails.notification.reply-created

+ Events:
    + Registered (native laravel event)
    + PostCreated
    + ReplyCreated

+ Listeners:
    + InformAdminThatUserRegistered,
    + InformAdminThatPostCreated,
    + InformAdminThatReplyCreated
    + InformUserThatReplyCreated.

Notification:
    + UserRegistered
    + UserConfirmed
    + PostCreatedAdminNotification
    + ReplyCreatedAdminNotification
    + ReplyCreatedUserNotification
    - review if data required by profile view is stored by notifications

Views:
    - email.notification
        - email.notification.user-registered
        - email.notification.user-confirmed
        - email.notification.post-created
        - email.notification.reply-created
    - profile
        + list of notification
        + notification.user-registered
        + notification.user-confirmed
        + notification.post-created
        + notification.reply-created
        + mark notifications as read button(s)
    + inform user (glyphicon-bell) if there are new notifications

Routes
    + mark notification(s) as read
    + re-send email confirmation request

Controllers
    + mark notification(s) as read
    + re-send email confirmation request

- Tests

- Queues
    - make notifcation Queueable
